Question 1 The first screen that appears after an app is launched is known as a _____________? 

Component Activity
Main Activity 
Screen class
Correct That’s correct! By default the Main Activity is the first screen that appears after an app is launched.

Question 2 What are the advantages of using Jetpack Compose for UI development? Check all that apply. 
It builds a UI without needing to use an Activity. 
It simplifies the development of UI components for Android applications 
Correct That’s correct! This is a feature of Jetpack Compose. 
It helps developers maintain a consistent UI across multiple devices and platforms such as Android, iOS and the web. 
Correct That’s correct! This is a feature of Jetpack Compose. 
It can help build a UI using less code 
Correct That’s correct! This is a feature of Jetpack Compose. 

Question 3 What is the purpose of View Groups when building an Android UI? Select all that apply. 

To define the navigation paths between screens 
Correct That’s correct! View Groups aid the connection of multiple UI screens. 
To provide a better organization of views. 
Correct That’s correct! Using View, groups the structure of the user interface. 
To allow for the creation of complex user interfaces 
Correct That’s correct! Along with Views and Layouts, View Groups aid the building of a more complex UI. 
To replace the use of TextView 

Question 4 Which of these are commonly used views in Android applications? Select all that apply.

TextView 
Correct That’s correct. TextView is used to display text. 
ButtonView This should not be selected Not quite. This is not a view in Android applications. 
ImageView Correct That’s correct. ImageView displays images. 
ActivityView Button Correct That’s correct. A button allows user input. 
TextField 

Question 5 Which of the following are layout views that can be used in Android UI design. Select all that apply.

GridLayout 
Correct That’s correct! A GridLayout is segmented with invisible lines to form cells in a grid of rows and columns. 
LinearLayout 
Correct That’s correct! A Linear Layout linearly organizes the contained views horizontally or vertically. 
RelativeLayout 
Correct That’s correct. A Relative Layout specifies the position of contained views relative to each other. ViewLayout UILayout